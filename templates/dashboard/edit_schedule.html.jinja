{% extends 'dashboard/common.html.jinja' %}
{% set active_page = 'edit_schedule' %}

{% block title %}ویرایش برنامه ریزی{% endblock %}
{% block header %}ویرایش برنامه ریزی{% endblock %}
{% block content %}

<div class="accordion" id="accordionHelp">
  <div class="accordion-item">
    <h2 class="accordion-header" id="help">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
          data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
          توضحیات و راهنمایی
      </button>
  </h2>
  <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="help"
      data-bs-parent="#accordionHelp">
      <div class="accordion-body">
            <ul>
              <li>برای افزودن یک برنامه جدید:‌ بر روی محور زمانی بکشید.</li>
              <li>برای حذف یک برنامه:‌ برنامه مورد نظر انتخاب کنید، و از دکمه X استفاده کنید.</li>
              <li>برای ویرایش برنامه: برنامه مورد نظر انتخاب کنید، بر روی آن کلیک کنید.</li>
              <li>برای تغییر مدت و زمان برنامه: برنامه مورد نظر انتخاب کنید، از سمت چپ یا راست بکشید یا خود برنامه را منتقل کنید.
              </li>
              <li>تغییرات به طور خودکار ذخیره میشوند.</li>
            
            </ul>
          </div>
      </div>
  </div>
</div>


<br>

<div id='calendar'></div>
<br>

<!-- Modal -->
<div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="scheduleModalLabel">تغییرات / افزودن</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form onsubmit="return false;">
        <div class="modal-body">
          <div class="input-group mb-3">
            <label for="description" class="input-group-text col-form-label">توضیحات</label>
            <input type="text" class="form-control" id="description">
          </div>
          <div class="input-group mb-3">
            <label for="schedule-type" class="input-group-text col-form-label">دسته بندی</label>
            <select class="form-select" aria-label="دسته بندی" id="schedule-type">
              {% for schedule_type in schedule_types %}
              <option value="{{ schedule_type.id }}">{{ schedule_type.description }}</option>
              {% endfor %}
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
          <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="delete">حذف برنامه</button>
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="add">تایید</button>
        </div>
      </form>
    </div>
  </div>
</div>

{% endblock %}

{% block code %}
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>

<script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.15/locales/fa.global.min.js"></script>

<script>
  const calendarEl = document.getElementById('calendar');
  const calendar = new FullCalendar.Calendar(calendarEl, {
    initialView: 'timeGridDay',
    locale: 'fa',
    events: "{{ url_for("dashboard.get_schedules") }}",
    slotDuration: '00:15:00',
    themeSystem: 'bootstrap5',
    nowIndicator: true,
    editable: true,
    eventResizableFromStart: true,
    selectable: true,
    allDaySlot: false,

    headerToolbar: {
      left: 'prev,next today',
      center: 'title',
      right: 'dayGridMonth,timeGridWeek,timeGridDay'
    },

    select: function (info) {
      (new bootstrap.Modal('#scheduleModal', {})).show();

      const delete_btn = document.querySelector('#delete');
      delete_btn.disabled = true;

      document.querySelector('#add').addEventListener('click', (e) => {
        const name = document.querySelector('#description');
        const type = document.querySelector('#schedule-type');

        if ((!name.value) || (!type.value)) {
          delete_btn.disabled = false;
          return
        }

        let event = {};

        event['start'] = new Date(info['start'].getTime())
        event['end'] = new Date(info['end'].getTime())
        event['title'] = name.value;
        event['classNames'] = ['item-' + type.value.toLowerCase()];

        name.value = ''
        

        let formData = new FormData();
        formData.append('start', event['start'].getTime());
        formData.append('end', event['end'].getTime());
        formData.append('description', event['title']);
        formData.append('type', event['classNames'][0].replace("item-", "").toUpperCase());

        const id = fetch("{{ url_for('dashboard.add_schedule') }}", {
          body: formData,
          method: "post"
        })
          .then(res => res.json())
          .then(res => {
            console.log(res['id'])
            event['id'] = res['id']
            
            delete_btn.disabled = false;
            calendar.addEvent(event)
          })
      }, { once: true })
    },


    eventResize: function (info) {
      let formData = new FormData();

      formData.append('id', info.event['id']);
      formData.append('start', info.event['start'].getTime());
      formData.append('end', info.event['end'].getTime());
      formData.append('description', info.event['title']);
      formData.append('type', info.event['classNames'][0].replace("item-", "").toUpperCase());

      fetch("{{ url_for('dashboard.update_schedule') }}", {
        body: formData,
        method: "post"
      })
    },

    eventDrop: function (info) {
      let formData = new FormData();

      formData.append('id', info.event['id']);
      formData.append('start', info.event['start'].getTime());
      formData.append('end', info.event['end'].getTime());
      formData.append('description', info.event['title']);
      formData.append('type', info.event['classNames'][0].replace("item-", "").toUpperCase());

      fetch("{{ url_for('dashboard.update_schedule') }}", {
        body: formData,
        method: "post"
      })
    },

    eventClick: function (info) {
      const name = document.querySelector('#description');
      const type = document.querySelector('#schedule-type');
      name.value = info.event.title;
      type.value = info.event['classNames'][0].replace("item-", "").toUpperCase();

      (new bootstrap.Modal('#scheduleModal', {})).show();
      
      const delete_btn = document.querySelector('#delete');
      delete_btn.disabled = false;

      document.querySelector('#add').addEventListener('click', (event) => {
        const name = document.querySelector('#description');
        const type = document.querySelector('#schedule-type');

        if ((!name.value) || (!type.value)) {
          return
        }

        info.event.setProp("title", name.value)
        info.event.setProp("classNames", ['item-' + type.value.toLowerCase()])

        let formData = new FormData();

        formData.append('id', info.event['id']);
        formData.append('start', info.event['start'].getTime());
        formData.append('end', info.event['end'].getTime());
        formData.append('description', info.event['title']);
        formData.append('type', info.event['classNames'][0].replace("item-", "").toUpperCase());

        name.value = ''

        fetch("{{ url_for('dashboard.update_schedule') }}", {
          body: formData,
          method: "post"
        }).then(res => console.log(res.status))
      }, { once: true })

      document.querySelector('#delete').addEventListener('click', (event) => {
        const name = document.querySelector('#description');
        const type = document.querySelector('#schedule-type');

        let formData = new FormData();

        name.value = ''
      
        formData.append('id', info.event['id']);
        fetch("{{ url_for('dashboard.delete_schedule') }}", {
          body: formData,
          method: "post"
        }).then(res => console.log(res.status))

        info.event.remove()
      }, { once: true })
    },
  });
  calendar.render();
</script>

<style>
  .fc-v-event .fc-event-main {
    color: var(--fc-event-text-color), inherit !important;
  }

  
  {% for schedule_type in schedule_types %}
  .item-{{ schedule_type.id }} {
    background-color: {{ schedule_type.background_color_hex }};
    color: {{ schedule_type.text_color_hex }};
  }
  {% endfor %}
</style>
{% endblock %}